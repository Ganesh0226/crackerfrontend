steps:
  # Build Docker image tagged with commit SHA
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'us-central1-docker.pkg.dev/feisty-filament-454407-c6/ganesh-repository/crackerfrontend:latest',
        '.'
      ]

  # Push image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'us-central1-docker.pkg.dev/feisty-filament-454407-c6/ganesh-repository/crackerfrontend:latest'
      ]

  # Deploy without traffic, configure Cloud Run to listen on port 80
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Deploy-No-Traffic
    entrypoint: gcloud
    args:
      [
        'run',
        'deploy',
        'ganesh-frontend2',
        '--image',
        'us-central1-docker.pkg.dev/feisty-filament-454407-c6/ganesh-repository/crackerfrontend:latest',
        '--platform',
        'managed',
        '--region',
        'us-central1',
        '--allow-unauthenticated',
        '--port=80',
        '--no-traffic'
      ]

  # Smoke test the new deployment (check root path)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Smoke-Test
    entrypoint: bash
    args:
      - -c
      - |
        NEW_URL=$(gcloud run services describe ganesh-frontend2 --region=us-central1 --format='value(status.url)')
        echo "Testing $$NEW_URL/"
        curl -f "$$NEW_URL/" || { echo "Smoke test failed"; exit 1; }

  # Shift all traffic to the new revision
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Shift-Traffic
    entrypoint: gcloud
    args:
      [
        'run',
        'services',
        'update-traffic',
        'ganesh-frontend2',
        '--to-latest',
        '--region=us-central1'
      ]

options:
  logging: CLOUD_LOGGING_ONLY
